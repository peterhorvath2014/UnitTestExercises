<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="7" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="62" started-at="2015-02-18T10:54:51Z" finished-at="2015-02-18T10:54:51Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="62" started-at="2015-02-18T10:54:51Z" finished-at="2015-02-18T10:54:51Z">
      <class name="com.epam.exercise2.StringHelperTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="setUp" is-config="true" duration-ms="8" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSwapLast2CharsWhenEmptyThenReturnEmpty()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="testSwapLast2CharsWhenEmptyThenReturnEmpty" duration-ms="8" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwapLast2CharsWhenEmptyThenReturnEmpty -->
        <test-method status="PASS" signature="testSwapLast2CharsWhenMultipleLettersThenReturnSwappedLast2()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="testSwapLast2CharsWhenMultipleLettersThenReturnSwappedLast2" duration-ms="8" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwapLast2CharsWhenMultipleLettersThenReturnSwappedLast2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSwapLast2CharsWhenOneLetterThenReturnTheSame()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="testSwapLast2CharsWhenOneLetterThenReturnTheSame" duration-ms="8" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwapLast2CharsWhenOneLetterThenReturnTheSame -->
        <test-method status="PASS" signature="testSwapLast2CharsWhenNullThenException()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="testSwapLast2CharsWhenNullThenException" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at com.epam.exercise2.StringHelper.validateNotNull(StringHelper.java:33)
	at com.epam.exercise2.StringHelper.swapLast2Chars(StringHelper.java:6)
	at com.epam.exercise2.StringHelperTest.testSwapLast2CharsWhenNullThenException(StringHelperTest.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwapLast2CharsWhenNullThenException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSwapLast2CharsWhenTwoLettersThenReturnSwapped1()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="testSwapLast2CharsWhenTwoLettersThenReturnSwapped1" duration-ms="8" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwapLast2CharsWhenTwoLettersThenReturnSwapped1 -->
        <test-method status="PASS" signature="testSwapLast2CharsWhenThreeLettersThenReturnSwappedLast2()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="testSwapLast2CharsWhenThreeLettersThenReturnSwappedLast2" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwapLast2CharsWhenThreeLettersThenReturnSwappedLast2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSwapLast2CharsWhenTwoLettersThenReturnSwapped2()[pri:0, instance:com.epam.exercise2.StringHelperTest@6ba6895c]" name="testSwapLast2CharsWhenTwoLettersThenReturnSwapped2" duration-ms="0" started-at="2015-02-18T11:54:51Z" finished-at="2015-02-18T11:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwapLast2CharsWhenTwoLettersThenReturnSwapped2 -->
      </class> <!-- com.epam.exercise2.StringHelperTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
