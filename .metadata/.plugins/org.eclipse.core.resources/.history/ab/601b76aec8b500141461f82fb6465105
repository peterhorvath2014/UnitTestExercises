package com.epam.junit;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.Test;

public class BasicJUnitExampleTest {
	private BasicJUnitExample basicJUnitExample;
	private final static Integer LESS_THAN_ULTIMATE = 41;
	private final static Integer MORE_THAN_ULTIMATE = 43;
	private final static Integer ULTIMATE = 42;
	
	@Before
	public void setUp() {
		basicJUnitExample = new BasicJUnitExample();
	}
	
	@Test
	public void testUltimateAnswerShouldTellEverythingAboutTheUniverse() {
		//GIVEN in setUp()
		//WHEN
		Integer result = basicJUnitExample.ultimateAnswer();
		//THEN
		assertEquals(ULTIMATE, result);
	}
	
	@Test(expected = IllegalArgumentException.class)
	public void testBadAnswerShouldThrowAnExceptionWhenInputIs42() {
		//GIVEN in setUp()
		//WHEN
		Integer input = ULTIMATE;
		//THEN
		basicJUnitExample.badAnswer(input);
	}
	
	@Test
	public void testBadAnswerShouldGiveBackInputIfLessThan42() {
		//GIVEN in setUp()
		//WHEN
		Integer input = LESS_THAN_ULTIMATE;
		//THEN
		assertEquals(input, basicJUnitExample.badAnswer(input));
	}
	
	@Test
	public void testBadAnswerShouldGiveBackInputIfMoreThan42() {
		//GIVEN in setUp()
		//WHEN
		Integer input = 43;
		//THEN
		assertEquals(input, basicJUnitExample.badAnswer(input));
	}
	
	@Test
	public void testisTheUltimateAnswerShouldBeTrueIfInputIs42() {
		//GIVEN in setUp()
		//WHEN
		Integer input = 42;
		//THEN
		assertEquals(true, basicJUnitExample.isTheUltimateAnswer(input));
	}
	
	@Test
	public void testIsTheUltimateAnswerShouldBeFalseIfInputIsLessThan42() {
		//GIVEN in setUp()
		//WHEN
		Integer input = LESS_THAN_ULTIMATE;
		//THEN
		assertEquals(false, basicJUnitExample.isTheUltimateAnswer(input));
	}
	
	@Test
	public void testIsTheUltimateAnswerShouldBeFalseIfInputIsMoreThan42() {
		//GIVEN in setUp()
		//WHEN
		Integer input = 43;
		//THEN
		assertEquals(false, basicJUnitExample.isTheUltimateAnswer(input));
	}
	
	
}
